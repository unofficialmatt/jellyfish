/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
  BUTTONS
  Default styling for all buttons
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

// Button stack defined in settings.scss
#{$buttons} {
    -webkit-appearance: none;
    user-select: none;
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    text:{
      decoration: none;
      transform: $button-text-transform;
      align: center;
    }
    font:{
      size: 0.9rem;
      weight: $button-font-weight;
      family: $button-font-family;
    }
    border:{
      width: $button-border-width;
      style: solid;
      radius: $button-border-radius;
    }
    line-height: 1.3;
    padding: $button-padding;
    margin: h($element-margin) 5px $element-margin 0;
    @include smooth(all);
    &::-moz-focus-inner {
        border: 0;
        padding: 0;
    }
    &:focus {
        outline: 0;
        box-shadow: 0px 0px 1px 3px call(get-function($ui-hover-function), $color-primary, $ui-focus-highlight-amount );
    }
    &:disabled {
      cursor: not-allowed;
      background-color: $button-disabled-background;
      border-color: $button-disabled-background;
      &:hover, &:focus {
        background-color: $button-disabled-background;
        border-color: $button-disabled-background;
      }
    }
    // Default Styles
    background-color: $color-primary;
    border-color: $color-primary;
    color: choose-contrast-color($color-primary,$button-text-color-light,$button-text-color-dark);
    &:hover, &:focus {
      background-color: call(get-function($ui-hover-function), $color-primary, $ui-hover-function-amount );
      border-color: call(get-function($ui-hover-function), $color-primary, $ui-hover-function-amount );
      color: choose-contrast-color($color-primary,$button-text-color-light,$button-text-color-dark);
    }
}

[type=reset], .button.outline, a.button.outline, .button.ghost, a.button.ghost {
  // Outline and ghost buttons have a transparent fill
  background-color: transparent !important;
  color: $color-primary;
  &:hover, &:focus {
    background-color: transparent !important;
    color: call(get-function($ui-hover-function), $color-primary, $ui-hover-function-amount );
  }
}

.button, a.button {
    &.ghost {
        border-color: transparent !important;
        &:hover, &:focus {
          border-color: transparent !important;
        }
    }
    &.expanded {
        display: block;
        width: 100%;
    }
    &.large {
        font-size: 1.1rem;
    }
    &.small {
        font-size: 0.8rem;
    }
    @each $name, $color in $theme-colors {
      // Loop through $theme-colors map and create buttons for each key
      &.#{$name} {
        @include create_button($color);
        // TODO: Replace all BEM style modifiers with simple .button.tertiary, .button.outline ?
      }
    }
}

.button-group {
  display: inline-flex;
  vertical-align: middle;
  position: relative;
  flex-wrap: wrap;
  .button, a.button {
    margin-top: 0;
    margin-bottom: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    max-width: $button-group-max-width;
  }
  @extend %mb;
  @if $button-group-margin == 'tight' {
    .button, a.button {
      margin-left: n($button-border-width);
      margin-right: 0;
      &:not(:first-child) {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
      &:not(:last-child) {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }
    }
  }
  @else {
    .button, a.button {
      margin-right: $button-group-margin;
      &:last-child {
        margin-right: 0;
      }
    }
  }
}
