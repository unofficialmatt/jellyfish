// Button stack defined in settings.scss
#{$buttons} {
  --button-color-theme: #{v(color-#{$button-base-color}-500)};
  --button-color-text: #{resolve-contrast-color(
      get-color-raw($button-base-color)
    )};

  @if $button-hover-value != 500 {
    --button-hover-color-theme: #{v(
        color-#{$button-base-color}-#{$button-hover-value}
      )};
    --button-hover-color-text: #{resolve-contrast-color(
        get-color-raw($button-base-color, $button-hover-value)
      )};
  }
  -webkit-appearance: none;
  user-select: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  text: {
    decoration: none;
    transform: $button-text-transform;
    align: center;
  }
  font: {
    size: $button-font-size;
    weight: $button-font-weight;
    family: $button-font-family;
  }
  color: v(button-color-text);
  background-color: v(button-color-theme);
  border: {
    color: v(button-color-theme);
    width: $button-border-width;
    style: solid;
    radius: $button-border-radius;
  }
  line-height: 1.3;
  padding: $button-padding;
  margin: 0 0 $element-margin 0;
  @include smooth(all);
  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }
}
button,
[type="submit"],
[type="reset"],
[type="button"] {
  &:disabled {
    color: v(button-color-text) !important;
    background-color: v(button-color-theme) !important;
    border-color: v(button-color-theme) !important;
    opacity: $button-disabled-opacity;
    cursor: not-allowed;
  }
}

%button-groups {
  flex-wrap: wrap;
  justify-content: flex-start;
}
.button-list {
  display: flex;
  align-items: center;
  @extend %button-groups;
  margin-bottom: calc(#{$element-margin} - #{$button-list-button-margin});
  @include above(sm) {
    margin-right: n($button-list-button-margin);
    margin-left: n($button-list-button-margin);
  }
  .button,
  a.button {
    margin: 0 $button-list-button-margin $button-list-button-margin * 2
      $button-list-button-margin;
    //display: inline-flex;
  }
}

.button-group {
  @extend %button-groups;
  display: inline-flex;
  margin-bottom: $element-margin;
  .button,
  a.button {
    margin: 0 0 0 n($button-border-width);
    &:not(:first-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    &:not(:last-child) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
  & + & {
    margin-left: $element-margin;
  }
}

.button-list .button-group {
  margin-bottom: calc(#{$element-margin} - #{$button-list-button-margin});
}

/***************
 * Modifiers
 ***************/

.button,
a.button {
  &.expanded {
    display: block;
    width: 100%;
  }
  &.xsmall {
    font-size: $button-font-size-xsmall;
    padding: $button-padding-xsmall;
  }
  &.small {
    font-size: $button-font-size-small;
    padding: $button-padding-small;
  }
  &.large {
    font-size: $button-font-size-large;
    padding: $button-padding-large;
  }

  &.outline,
  &.ghost {
    color: v(button-color-theme);
    background-color: transparent;
  }
  &.ghost {
    @if $button-hover-value != 500 {
      --button-hover-color-text: #{v(
          color-#{$button-base-color}-#{$button-hover-value}
        )};

      text-decoration: underline;
      border-color: transparent;
      &:hover,
      &:focus {
        border-color: transparent;
        background-color: transparent;
      }
    }
  }
}

#{$buttons} {
  @if $button-hover-value != 500 {
    &:hover,
    &:focus {
      color: v(button-hover-color-text);
      background-color: v(button-hover-color-theme);
      border-color: v(button-hover-color-theme);
    }
  }
}

.button,
a.button {
  @each $key, $map in $colors {
    &.#{$key} {
      @include createButton($key);
    }
  }
  &.white {
    --button-color-theme: #{v(color-white)};
    --button-color-text: #{v(color-text)};
    @if $button-hover-value != 500 {
      --button-hover-color-theme: #{v(color-neutral-50)};
    }
    color: v(button-color-text);
  }
}
